{"ast":null,"code":"import * as THREE from 'three';\nimport * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\nimport { MapControls } from 'three/addons/controls/MapControls.js';\n//import { FloatType, MeshStandardMaterial, PMREMGenerator, Scene, PerspectiveCamera, WebGLRenderer, Color, ACESFilmicToneMapping, SRGBEncoding} from 'three';\n//import { RGBELoader } from 'https://cdn.skypack.dev/three-stdlib@2.8.5/loaders/RGBELoader';\nimport { ACESFilmicToneMapping } from 'three';\nexport default {\n  name: 'App',\n  mounted() {\n    this.initThree();\n    this.animate();\n    window.addEventListener('resize', this.onWindowResize);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.onWindowResize);\n  },\n  methods: {\n    initThree() {\n      // Create scene\n      this.scene = new THREE.Scene();\n\n      // Create camera\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.camera.position.z = 5;\n\n      // Create renderer\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.$refs.threeContainer.appendChild(this.renderer.domElement); // ✅ Corrected\n\n      this.renderer.toneMapping = ACESFilmicToneMapping;\n\n      // Add a cube\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      this.cube = new THREE.Mesh(geometry, material);\n      this.scene.add(this.cube);\n\n      // Add a plane\n      const planeGeometry = new THREE.PlaneGeometry(4, 4);\n      const planeMaterial = new THREE.MeshBasicMaterial({\n        color: 0x745DD9,\n        side: THREE.DoubleSide,\n        opacity: 0.25,\n        transparent: true\n      });\n      const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n      plane.rotation.x = Math.PI / 2;\n      this.scene.add(plane);\n\n      // Controls\n      this.controls = new MapControls(this.camera, this.renderer.domElement);\n      this.controls.enableDamping = true; // ✅ Smooth movement\n      this.controls.enableRotate = true;\n      this.controls.enablePan = true;\n      this.controls.enableZoom = true;\n\n      // Start animation loop\n      this.animate = this.animate.bind(this); // ✅ Ensure `this` context is retained\n      this.animate();\n    },\n    hexGeometry(height, position) {\n      let geo = new THREE.CylinderGeometry(1, 1, height, 6, 1, false);\n      geo.translate(position.x, height * 0.5, position.y);\n      return geo;\n    },\n    makeHex(height, position) {\n      let geo = this.hexGeometry(height, position);\n      this.hexagonalGeometries = BufferGeometryUtils.mergeGeometries([this.hexagonalGeometries, geo]);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      this.controls.update();\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};","map":{"version":3,"names":["THREE","BufferGeometryUtils","MapControls","ACESFilmicToneMapping","name","mounted","initThree","animate","window","addEventListener","onWindowResize","beforeUnmount","removeEventListener","methods","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","$refs","threeContainer","appendChild","domElement","toneMapping","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","planeGeometry","PlaneGeometry","planeMaterial","side","DoubleSide","opacity","transparent","plane","rotation","x","Math","PI","controls","enableDamping","enableRotate","enablePan","enableZoom","bind","hexGeometry","height","geo","CylinderGeometry","translate","y","makeHex","hexagonalGeometries","mergeGeometries","requestAnimationFrame","update","render","aspect","updateProjectionMatrix"],"sources":["/Users/ollie/Desktop/thingo/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <div ref=\"threeContainer\" class=\"three-container\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\nimport { MapControls } from 'three/addons/controls/MapControls.js';\n//import { FloatType, MeshStandardMaterial, PMREMGenerator, Scene, PerspectiveCamera, WebGLRenderer, Color, ACESFilmicToneMapping, SRGBEncoding} from 'three';\n//import { RGBELoader } from 'https://cdn.skypack.dev/three-stdlib@2.8.5/loaders/RGBELoader';\nimport {ACESFilmicToneMapping} from 'three';\n\n\nexport default {\n  name: 'App',\n  mounted() {\n    this.initThree();\n    this.animate();\n    window.addEventListener('resize', this.onWindowResize);\n    \n\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.onWindowResize);\n  },\n  methods: {\n    initThree() {\n    // Create scene\n    this.scene = new THREE.Scene();\n\n    // Create camera\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    this.camera.position.z = 5;\n\n    // Create renderer\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.$refs.threeContainer.appendChild(this.renderer.domElement); // ✅ Corrected\n\n    this.renderer.toneMapping = ACESFilmicToneMapping;\n\n    // Add a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube);\n\n    // Add a plane\n    const planeGeometry = new THREE.PlaneGeometry(4, 4);\n    const planeMaterial = new THREE.MeshBasicMaterial({\n      color: 0x745DD9,\n      side: THREE.DoubleSide,\n      opacity: 0.25,\n      transparent: true\n    });\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.rotation.x = Math.PI / 2;\n    this.scene.add(plane);\n\n    // Controls\n    this.controls = new MapControls(this.camera, this.renderer.domElement);\n    this.controls.enableDamping = true; // ✅ Smooth movement\n    this.controls.enableRotate = true;\n    this.controls.enablePan = true;\n    this.controls.enableZoom = true;\n\n    // Start animation loop\n    this.animate = this.animate.bind(this); // ✅ Ensure `this` context is retained\n    this.animate();\n    },\n    hexGeometry(height, position){\n        let geo = new THREE.CylinderGeometry(1, 1, height, 6, 1, false);\n        geo.translate(position.x, height * 0.5, position.y);\n        return geo;\n    },\n    makeHex(height, position) {\n    let geo = this.hexGeometry(height, position);\n    this.hexagonalGeometries = BufferGeometryUtils.mergeGeometries([this.hexagonalGeometries, geo]);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      this.controls.update();\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};\n</script>\n\n<style scoped>\n* {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.three-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}