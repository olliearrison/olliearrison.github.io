{"ast":null,"code":"import * as THREE from 'three';\nimport { MapControls } from 'three/addons/controls/MapControls.js';\nimport * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\n//import { FloatType, MeshStandardMaterial, PMREMGenerator, Scene, PerspectiveCamera, WebGLRenderer, Color, ACESFilmicToneMapping, SRGBEncoding} from 'three';\n//import { RGBELoader } from 'https://cdn.skypack.dev/three-stdlib@2.8.5/loaders/RGBELoader';\nimport { ACESFilmicToneMapping } from 'three';\nexport default {\n  name: 'App',\n  mounted() {\n    this.initThree();\n    this.animate();\n    window.addEventListener('resize', this.onWindowResize);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.onWindowResize);\n  },\n  methods: {\n    initThree() {\n      // Create scene\n      this.scene = new THREE.Scene();\n\n      // Create camera\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.camera.position.z = 5;\n\n      // Create renderer\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.$refs.threeContainer.appendChild(this.renderer.domElement);\n      this.renderer.toneMapping = ACESFilmicToneMapping;\n\n      // Add a cube\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      this.cube = new THREE.Mesh(geometry, material);\n      this.scene.add(this.cube);\n\n      //* HEX\n      this.hexagonalGeometries = new THREE.BoxGeometry(0, 0, 0);\n      this.makeHex(1, {\n        x: 0,\n        y: 0\n      });\n      const resulting = new THREE.Mesh(this.hexagonalGeometries, material);\n      this.scene.add(resulting);\n\n      // Add a plane\n      const planeGeometry = new THREE.PlaneGeometry(4, 4);\n      const planeMaterial = new THREE.MeshBasicMaterial({\n        color: 0x745DD9,\n        side: THREE.DoubleSide,\n        opacity: 0.25,\n        transparent: true\n      });\n      const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n      plane.rotation.x = Math.PI / 2;\n      this.scene.add(plane);\n    },\n    hexGeometry(height, position) {\n      let geo = new THREE.CylinderGeometry(1, 1, height, 6, 1, false);\n      geo.translate(position.x, height * 0.5, position.y);\n      return geo;\n    },\n    makeHex(height, position) {\n      let geo = this.hexGeometry(height, position);\n      this.hexagonalGeometries = BufferGeometryUtils.mergeGeometries([this.hexagonalGeometries, geo]);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};","map":{"version":3,"names":["THREE","MapControls","BufferGeometryUtils","ACESFilmicToneMapping","name","mounted","initThree","animate","window","addEventListener","onWindowResize","beforeUnmount","removeEventListener","methods","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","$refs","threeContainer","appendChild","domElement","toneMapping","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","hexagonalGeometries","makeHex","x","y","resulting","planeGeometry","PlaneGeometry","planeMaterial","side","DoubleSide","opacity","transparent","plane","rotation","Math","PI","hexGeometry","height","geo","CylinderGeometry","translate","mergeGeometries","requestAnimationFrame","render","aspect","updateProjectionMatrix"],"sources":["/Users/ollie/Desktop/thingo/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <div ref=\"threeContainer\" class=\"three-container\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { MapControls } from 'three/addons/controls/MapControls.js';\n\nimport * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\n//import { FloatType, MeshStandardMaterial, PMREMGenerator, Scene, PerspectiveCamera, WebGLRenderer, Color, ACESFilmicToneMapping, SRGBEncoding} from 'three';\n//import { RGBELoader } from 'https://cdn.skypack.dev/three-stdlib@2.8.5/loaders/RGBELoader';\nimport {ACESFilmicToneMapping} from 'three';\n\n\nexport default {\n  name: 'App',\n  mounted() {\n    this.initThree();\n    this.animate();\n    window.addEventListener('resize', this.onWindowResize);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.onWindowResize);\n  },\n  methods: {\n    initThree() {\n      // Create scene\n      this.scene = new THREE.Scene();\n\n      // Create camera\n      this.camera = new THREE.PerspectiveCamera(\n        75,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        1000\n      );\n      this.camera.position.z = 5;\n\n      // Create renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.$refs.threeContainer.appendChild(this.renderer.domElement);\n      this.renderer.toneMapping = ACESFilmicToneMapping;\n\n      // Add a cube\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n      this.cube = new THREE.Mesh(geometry, material);\n      this.scene.add(this.cube);\n\n      //* HEX\n      this.hexagonalGeometries = new THREE.BoxGeometry(0,0,0);\n      this.makeHex(1, { x: 0, y: 0 });\n      const resulting = new THREE.Mesh(this.hexagonalGeometries, material);\n      this.scene.add(resulting);\n\n      // Add a plane\n      const planeGeometry = new THREE.PlaneGeometry(4, 4);\n      const planeMaterial = new THREE.MeshBasicMaterial({\n        color: 0x745DD9,\n        side: THREE.DoubleSide,\n        opacity: 0.25,\n        transparent: true\n      });\n      const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n      plane.rotation.x = Math.PI / 2;\n      this.scene.add(plane);\n    },\n    hexGeometry(height, position){\n        let geo = new THREE.CylinderGeometry(1, 1, height, 6, 1, false);\n        geo.translate(position.x, height * 0.5, position.y);\n        return geo;\n    },\n    makeHex(height, position) {\n    let geo = this.hexGeometry(height, position);\n    this.hexagonalGeometries = BufferGeometryUtils.mergeGeometries([this.hexagonalGeometries, geo]);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      this.cube.rotation.x += 0.01;\n      this.cube.rotation.y += 0.01;\n      this.renderer.render(this.scene, this.camera);\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};\n</script>\n\n<style scoped>\n* {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.three-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}