{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/Users/ollie/Desktop/thingo/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"container\"></div>\n</template>\n\n<script>\nimport * as Three from 'three'\n\nexport default {\nname: 'ThreeTest',\ndata() {\n  return {\n    camera: null,\n    scene: null,\n    renderer: null,\n    mesh: null\n  }\n},\nmethods: {\n  init: function() {\n      let container = document.getElementById('container');\n\n      this.camera = new Three.PerspectiveCamera(70, container.clientWidth/container.clientHeight, 0.01, 10);\n      this.camera.position.z = 1;\n\n      this.scene = new Three.Scene();\n\n      let geometry = new Three.BoxGeometry(0.2, 0.2, 0.2);\n      let material = new Three.MeshNormalMaterial();\n\n      this.mesh = new Three.Mesh(geometry, material);\n      this.scene.add(this.mesh);\n\n      this.renderer = new Three.WebGLRenderer({antialias: true});\n      this.renderer.setSize(container.clientWidth, container.clientHeight);\n      container.appendChild(this.renderer.domElement);\n\n  },\n  animate: function() {\n      requestAnimationFrame(this.animate);\n      this.mesh.rotation.x += 0.01;\n      this.mesh.rotation.y += 0.02;\n      this.renderer.render(this.scene, this.camera);\n  }\n},\nmounted() {\n    this.init();\n    this.animate();\n}\n}\n</script>\n\n"],"mappings":";;EACOA,EAAE,EAAC;AAAW;;uBAAnBC,mBAAA,CAA0B,OAA1BC,UAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}